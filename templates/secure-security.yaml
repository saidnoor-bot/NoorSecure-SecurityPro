AWSTemplateFormatVersion: '2010-09-09'
Description: SecureShare Security Stack - Logging, GuardDuty, Config, CloudTrail

Resources:

  LogBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub secureshare-logs-${AWS::AccountId}-${AWS::Region}
      VersioningConfiguration:
        Status: Enabled
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true

  ConfigRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: SecureShareConfigRole
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: config.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: ConfigWritePolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:GetBucketAcl
                Resource: !Sub arn:aws:s3:::secureshare-logs-${AWS::AccountId}-${AWS::Region}/*

  ConfigRecorder:
    Type: AWS::Config::ConfigurationRecorder
    Properties:
      Name: ConfigRecorder
      RoleARN: !GetAtt ConfigRole.Arn
      RecordingGroup:
        AllSupported: true
        IncludeGlobalResourceTypes: true

  ConfigDeliveryChannel:
    Type: AWS::Config::DeliveryChannel
    DependsOn: ConfigRecorder
    Properties:
      Name: ConfigChannel
      S3BucketName: !Sub secureshare-logs-${AWS::AccountId}-${AWS::Region}

  CloudTrail:
    Type: AWS::CloudTrail::Trail
    Properties:
      TrailName: SecureShareTrail
      S3BucketName: !Sub secureshare-logs-${AWS::AccountId}-${AWS::Region}
      IsLogging: true
      IncludeGlobalServiceEvents: true
      IsMultiRegionTrail: true
      EnableLogFileValidation: true

  GuardDutyDetector:
    Type: AWS::GuardDuty::Detector
    Properties:
      Enable: true

Outputs:
  LogBucketName:
    Value: !Sub secureshare-logs-${AWS::AccountId}-${AWS::Region}
    Description: Logging bucket name

